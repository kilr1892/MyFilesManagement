<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.filesupload.mapper.FileInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.filesupload.pojo.FileInfo" >
    <result column="file_id" property="fileId" jdbcType="INTEGER" />
    <result column="file_created_by_name" property="fileCreatedByName" jdbcType="VARCHAR" />
    <result column="file_created_date" property="fileCreatedDate" jdbcType="TIMESTAMP" />
    <result column="file_updated_by_name" property="fileUpdatedByName" jdbcType="VARCHAR" />
    <result column="file_updated_date" property="fileUpdatedDate" jdbcType="TIMESTAMP" />
    <result column="file_delete_time" property="fileDeleteTime" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_original_name" property="fileOriginalName" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="VARCHAR" />
    <result column="file_is_delete" property="fileIsDelete" jdbcType="BIT" />
    <result column="file_md5" property="fileMd5" jdbcType="VARCHAR" />
    <result column="file_resource_id" property="fileResourceId" jdbcType="VARCHAR" />
    <result column="file_size" property="fileSize" jdbcType="BIGINT" />
    <result column="file_is_valid" property="fileIsValid" jdbcType="BIT" />
    <result column="file_reserved_varchar1" property="fileReservedVarchar1" jdbcType="VARCHAR" />
    <result column="file_reserved_varchar2" property="fileReservedVarchar2" jdbcType="VARCHAR" />
    <result column="file_reserved_varchar3" property="fileReservedVarchar3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    file_id, file_created_by_name, file_created_date, file_updated_by_name, file_updated_date, 
    file_delete_time, file_name, file_original_name, file_path, file_type, file_is_delete, 
    file_md5, file_resource_id, file_size, file_is_valid, file_reserved_varchar1, file_reserved_varchar2, 
    file_reserved_varchar3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.filesupload.pojo.FileInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.edu.zju.filesupload.pojo.FileInfoExample" >
    delete from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.filesupload.pojo.FileInfo" >
    insert into file_info (file_id, file_created_by_name, file_created_date, 
      file_updated_by_name, file_updated_date, file_delete_time, 
      file_name, file_original_name, file_path, 
      file_type, file_is_delete, file_md5, 
      file_resource_id, file_size, file_is_valid, 
      file_reserved_varchar1, file_reserved_varchar2, 
      file_reserved_varchar3)
    values (#{fileId,jdbcType=INTEGER}, #{fileCreatedByName,jdbcType=VARCHAR}, #{fileCreatedDate,jdbcType=TIMESTAMP}, 
      #{fileUpdatedByName,jdbcType=VARCHAR}, #{fileUpdatedDate,jdbcType=TIMESTAMP}, #{fileDeleteTime,jdbcType=VARCHAR}, 
      #{fileName,jdbcType=VARCHAR}, #{fileOriginalName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=VARCHAR}, #{fileIsDelete,jdbcType=BIT}, #{fileMd5,jdbcType=VARCHAR}, 
      #{fileResourceId,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{fileIsValid,jdbcType=BIT}, 
      #{fileReservedVarchar1,jdbcType=VARCHAR}, #{fileReservedVarchar2,jdbcType=VARCHAR}, 
      #{fileReservedVarchar3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.filesupload.pojo.FileInfo" >
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="fileCreatedByName != null" >
        file_created_by_name,
      </if>
      <if test="fileCreatedDate != null" >
        file_created_date,
      </if>
      <if test="fileUpdatedByName != null" >
        file_updated_by_name,
      </if>
      <if test="fileUpdatedDate != null" >
        file_updated_date,
      </if>
      <if test="fileDeleteTime != null" >
        file_delete_time,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileOriginalName != null" >
        file_original_name,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="fileIsDelete != null" >
        file_is_delete,
      </if>
      <if test="fileMd5 != null" >
        file_md5,
      </if>
      <if test="fileResourceId != null" >
        file_resource_id,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
      <if test="fileIsValid != null" >
        file_is_valid,
      </if>
      <if test="fileReservedVarchar1 != null" >
        file_reserved_varchar1,
      </if>
      <if test="fileReservedVarchar2 != null" >
        file_reserved_varchar2,
      </if>
      <if test="fileReservedVarchar3 != null" >
        file_reserved_varchar3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileCreatedByName != null" >
        #{fileCreatedByName,jdbcType=VARCHAR},
      </if>
      <if test="fileCreatedDate != null" >
        #{fileCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileUpdatedByName != null" >
        #{fileUpdatedByName,jdbcType=VARCHAR},
      </if>
      <if test="fileUpdatedDate != null" >
        #{fileUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileDeleteTime != null" >
        #{fileDeleteTime,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileOriginalName != null" >
        #{fileOriginalName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileIsDelete != null" >
        #{fileIsDelete,jdbcType=BIT},
      </if>
      <if test="fileMd5 != null" >
        #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="fileResourceId != null" >
        #{fileResourceId,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileIsValid != null" >
        #{fileIsValid,jdbcType=BIT},
      </if>
      <if test="fileReservedVarchar1 != null" >
        #{fileReservedVarchar1,jdbcType=VARCHAR},
      </if>
      <if test="fileReservedVarchar2 != null" >
        #{fileReservedVarchar2,jdbcType=VARCHAR},
      </if>
      <if test="fileReservedVarchar3 != null" >
        #{fileReservedVarchar3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.filesupload.pojo.FileInfoExample" resultType="java.lang.Integer" >
    select count(*) from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update file_info
    <set >
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.fileCreatedByName != null" >
        file_created_by_name = #{record.fileCreatedByName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileCreatedDate != null" >
        file_created_date = #{record.fileCreatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileUpdatedByName != null" >
        file_updated_by_name = #{record.fileUpdatedByName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileUpdatedDate != null" >
        file_updated_date = #{record.fileUpdatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileDeleteTime != null" >
        file_delete_time = #{record.fileDeleteTime,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileOriginalName != null" >
        file_original_name = #{record.fileOriginalName,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null" >
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null" >
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileIsDelete != null" >
        file_is_delete = #{record.fileIsDelete,jdbcType=BIT},
      </if>
      <if test="record.fileMd5 != null" >
        file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.fileResourceId != null" >
        file_resource_id = #{record.fileResourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null" >
        file_size = #{record.fileSize,jdbcType=BIGINT},
      </if>
      <if test="record.fileIsValid != null" >
        file_is_valid = #{record.fileIsValid,jdbcType=BIT},
      </if>
      <if test="record.fileReservedVarchar1 != null" >
        file_reserved_varchar1 = #{record.fileReservedVarchar1,jdbcType=VARCHAR},
      </if>
      <if test="record.fileReservedVarchar2 != null" >
        file_reserved_varchar2 = #{record.fileReservedVarchar2,jdbcType=VARCHAR},
      </if>
      <if test="record.fileReservedVarchar3 != null" >
        file_reserved_varchar3 = #{record.fileReservedVarchar3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file_info
    set file_id = #{record.fileId,jdbcType=INTEGER},
      file_created_by_name = #{record.fileCreatedByName,jdbcType=VARCHAR},
      file_created_date = #{record.fileCreatedDate,jdbcType=TIMESTAMP},
      file_updated_by_name = #{record.fileUpdatedByName,jdbcType=VARCHAR},
      file_updated_date = #{record.fileUpdatedDate,jdbcType=TIMESTAMP},
      file_delete_time = #{record.fileDeleteTime,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_original_name = #{record.fileOriginalName,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_is_delete = #{record.fileIsDelete,jdbcType=BIT},
      file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      file_resource_id = #{record.fileResourceId,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      file_is_valid = #{record.fileIsValid,jdbcType=BIT},
      file_reserved_varchar1 = #{record.fileReservedVarchar1,jdbcType=VARCHAR},
      file_reserved_varchar2 = #{record.fileReservedVarchar2,jdbcType=VARCHAR},
      file_reserved_varchar3 = #{record.fileReservedVarchar3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>